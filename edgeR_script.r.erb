library(tidyverse)
library(edgeR)
source("<%= x_seq_dir %>/RNAseq_plot_lib.r")

sample_list   <- read_tsv("sample_list.txt", col_names = c("sampleIds", "groupIds"))
counts_matrix <- read_tsv("./counts.matrix", skip = 1,
                          col_names = c("GeneID", sample_list$sampleIds))

data_df       <- column_to_rownames(counts_matrix, "GeneID")
rnaseqMatrix  <- round(data_df)
rnaseqMatrix  <- rnaseqMatrix[rowSums(rnaseqMatrix) >= nrow(sample_list),]

conditions  <- factor(sample_list$groupIds)

exp_study <- DGEList(counts = rnaseqMatrix, group = conditions)
exp_study <- calcNormFactors(exp_study)

nc <- cpm(exp_study, normalized.lib.sizes = TRUE)

normalized_counts <- as_tibble(rownames_to_column(as.data.frame(nc), "GeneID"))
write_tsv(normalized_counts, "./results/normalized_counts.txt")
ncBoxPlot(nc, sample_list$sampleIds)

disp_table <- tibble("comp" = c("comp0"), "dispersion" = c(0))

<% comp_list.each do |num, pair| %>
  # comp<%= num %>
  controls    <- sample_list %>% filter(groupIds == "<%= pair.first %>")
  experiments <- sample_list %>% filter(groupIds == "<%= pair.last  %>")

  comp_samples <- bind_rows(controls, experiments)
  comp_study   <- exp_study[, comp_samples$sampleIds]

  if(nrow(controls) > 1 && nrow(experiments) > 1) {
    comp_study <- estimateCommonDisp(comp_study)
    comp_study <- estimateTagwiseDisp(comp_study)
  } else {
    comp_study$common.dispersion <- <%= @dispersion %>
  }

  disp_table <- disp_table %>%
    add_row(comp = "comp<%= num %>", dispersion = comp_study$common.dispersion)

  et <- exactTest(comp_study, pair=c(<%= to_strings(pair) %>))
  tTags <- topTags(et, n = NULL)
  result_table <- as_tibble(rownames_to_column(as.data.frame(tTags), "GeneID"))
  colnames(result_table) <- c("GeneID",
                              "comp<%= num %>_logFC",  "comp<%= num %>_logCPM",
                              "comp<%= num %>_PValue", "comp<%= num %>_FDR")
  write_tsv(result_table, "./results/comp<%= num %>.edgeR.DE_results")

  #ncScatterPlot(nc, <%= to_strings(pair) %>)
  myPlotSmear(et, <%= to_strings(pair) %>)
<% end %>

disp_table <- disp_table %>% filter(comp != "comp0")
write_tsv(disp_table, "dispersions.txt")
